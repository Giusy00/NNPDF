Guide to config (.ini) files. 
CD 02/07/13 

Quick Settings:
FITMETHOD  = {GA, NN23, NN23TWT, WP}
    GA: basic genetic algorithm
    NN23: Fortran-style epochs
    NN23TWT: NN23 with targeted weight training
    WP: basic GA with weight penalty
    
STOPMETHOD = {FIXEDLENGTH, TRVAL}
    FIXEDLENGTH: No stopping
    TRVAL: Cross-validation stopping
    
PARAMTYPE  = {NN,CHEBYSHEV}
    NN: Neural networks
    CHEBYSHEV: Chebyshev polynomials

FITBASIS = {NN23,NN23QED,EVOL,EVOLQED}
	NN23 and NN23QED: the standared NN fitting basis
	order: sng,g,v,t3,ds,sp,sm,pht
	EVOL and EVOLQED: the evolution basis
	order: sng,g,v,v3,v8,t3,t8,pht
	EVOLS and EVOLQED: evolution for strangeness
	order:= sng=0,g=1,v=2,v8=4,t3=4,t8=5,ds=6,pht=7
  NN30IC: evolution for intrinsic charm
  order: sng,g,v,t3,ds,sp,sm,cp,cm
  EVOLIC: evolution for intrinsic charm
  order: sng,g,v,v3,v8,v15,t3,t8,t15

All options:
[Description]
The description can be any number of lines, but needs to end with "[/Description]" on a new line.
[/Description]

################################################################
[Experiments & Datasets]
Statment of which datasets are included, and designation of these sets to experiments.
The name of the dataset must match it's definition elsewhere (in buildmaster, in the data folder).
Every dataset must be in an experiment, the experiments are defined here so the name can be anything.

The general format for entries is:

EXPERIMENT: $Experiment_name
 	DATASET = $Dataset_1_name $training_fraction $WT_target(optional) $SYS_number(optional)
 	DATASET = $Dataset_2_name $training_fraction $WT_target(optional) $SYS_number(optional)
 	...

for example:

EXPERIMENT: CDF
	DATASET = CDFR2KT 0.5 1.7988 SYS2
	DATASET = CDFZRAP 1.0 3.1634

Weight Training target and SYSTYPE number are optional, with defaults of 1.0 and SYS1.

[/Experiments & Datasets]

################################################################
[Experimental Data]
Settings for filter cuts and t0 vector generation

T0PDFSET = $PDFsetname
 - PDF set used to generate t0 covariance matrix
Q2MIN    = $Min_Q^2_cut
 - Q^2 minimum below which data is cut (used in filter)
W2MIN    = $Min_W^2_cut
 - W^2 minimum below which data is cut (used in filter)
 
[/Experimental Data]

################################################################
[ClosureTest]
Settings for closure test data generation. Fake data is generated by filter.

FAKEDATA  =   {0,1} 
 - 0 to use experimental data, 1 to generate closure test fake data
FAKEPDF   = $PDFsetname
 - PDF set to use for theoretical values for closure test data.
FAKENOISE = {0,1}
 - 0 to generate fake data without artificial noise (i.e. theory values only), 1 to generate fake data with usual fluctiations.
PRINTPDF4GEN = {0,1} 
 - 1 to generate the log file with NX points per PDF every 10 generations

[/ClosureTest]

################################################################
[Theory]
Settings for which FKtables to use.

PTORD    = {0,1,2}                    
 - 0 for LO, 1 for NLO, 2 NNLO
ALPHAS   = $Alpha_S_value			
 - Alpha_s(Mz)
QREF     = 91.2
 - reference scale for alpha_s
Q20      = $Initial scale	                
 - the initial scale
VFNS     = {FFN0, FFNS, ZMVN, GMVN}
 - scheme selection 
VFNSTYPE = {A, B, C}
 - Used for FONNL A,B or C (only for GMVN) 
MSBAR = {0,1}
 - Switch on off MSBAR masses vs Pole Mass
MC = 1.275
 - charm mass
MB = 4.18
 - bottom mass
MT = 173.07
 - top mass
NF = {3,4,5,6}
 - max. nf theory
[/Theory]

################################################################
[Replica Properties]
Settings for replica generation in nnfit

SEED	     = $seed
 - seed for the random generator
GENREP       = {0,1}
 - 0 use real data, 1 generate MC replica
RNGALGORITHM = {0,1}
 - 0 for ranlux, 1 for cmrg (see randomgenerator.cc)
 
[/Replica Properties]

################################################################
[Fitting]
Settings for the minimization in nnfit

FITMETHOD  = {GA, NN23, NN23TWT, WP}
 - Minimization algorithm
    GA: basic genetic algorithm
    NN23: Fortran-style epochs - uses settings below for first 2000 generations then hardcoded FastGA settings
    NN23TWT: NN23 with targeted weight training
    WP: basic GA with weight penalty
     
NGEN       = $Max_num_generation
 - Maximum number of generations, after which the fit is stopped regardless of stopping criteria below.
NMUTANTS   = $Num_mutants
 - Number of mutants using in genetic algorithm each generation.
NMUTPDF    = $NM_SING $NM_GLU $NM_V $NM_T3 $NM_DS $NM_SP $NM_SM $NM_GAM(optional)
 - Number of mutations per generation for each PDF. 
 - Note that the order must match the fit basis defined in pdftransform.h.
 
MUTSIZE0 = $MUT_1_SIZE   $MUT_2_SIZE ...
MUTPROB0 = $MUT_1_PROB   $MUT_2_PROB ...
etc.
 - Mutation size and probability for each PDF. 
 - Note that the order here (unlike above) is not important, but the number of mutation sizes and probabilities given must match the value in NMUTPDF.
 
[/Fitting]

################################################################
[Stopping]
Settings for dynamical stopping

STOPMETHOD = {FIXEDLENGTH, TRVAL}
 - Stopping method
    FIXEDLENGTH: No stopping. Fit is stopped by NGEN parameter, and other parameters in this section don't matter.
    TRVAL: Cross-validation stopping with parameters given below. If FITMETHOD is NN23 or NN23TWT stopping only happens after 10000 generations.
    
MINCHI2    = $Min_stopping_chi2		
 - Minimum chi2 which all experiments must be under for fit to stop 
NSMEAR     = $Smear_length		
 - Length (in generations) that chi2s are smeared over for stopping criteria
DELTASM    = $Delta_smear
 - Length (in generations) between the first and second smeared chi2 compared for stopping criteria
RV         = $Min_val_ratio
 - Minimum ratio for new validation smeared chi2 to old for stopping to occur (stop if newchi2/oldchi2 > $Min_val_ratio + other criteria)
RT         = $Max_trn_ratio
 - Minimum ratio for new training smeared chi2 to old for stopping to occur (stop if newchi2/oldchi2 < $Max_val_ratio + other criteria)

[/Stopping]

################################################################
[Positivity]
Settings for positivity and statment of which positivity sets are included

POSMULT    = $Default_Lag_mult
 - Default value for positivity Lagrange multiplier

General format for positivity sets is:

POSDATASET = $Pos_set_name $Set_Lag_mut(optional)

For example:

POSDATASET = POSF2U
POSDATASET = POSFLL 10E4

$Pos_set_name must match the name as defined by the name of the FKgrid.
$Set_Lag_mut default value is set by $Default_Lag_mult

[/Positivity]

################################################################
[NN Properties]
Settings for the neural networks used in nnfit

PARAMTYPE = {NN,CHEBYSHEV}
 - Parameterization used
    NN: Neural networks used parameters below.
    CHEBYSHEV: Chebyshev polynomials of order 10.

NLAYERS   = $N_layers
 - Number of layers in the neural networks.
NNODES    = $N_nodes_l1  $N_nodes_l2 ... 
 - Number of nodes in each layer. 
 - Number of entries must match $N_layers.
 
SMALLX0 = $Min_small_x_exp  $Max_small_x_exp
LARGEX0 = $Min_large_x_exp  $Max_large_x_exp
...
 - Ranges for the preprocessing exponents for each PDF.
 - Can be defined in any order.

[/NN Properties]

################################################################
[WP Properties]
Settings for weight penalty minimization

WPSTR0 = $Pen_strength_1  $Pen_strength_2 ...          
etc.
 - Weight penalty strengths for each PDF. 
 - Number of entries for each PDF must match structure of network defined in previous section (number of input nodes + number of output nodes + 1)

[/WP Properties]

################################################################
[Ouput Folder]
Location for results directory

RESULTSDIR = $results_directory
 - Directory for results, defined relative to nnpdfcpp folder.
 
[/Ouput Folder]

################################################################
[Devel]
Debug Mode. Turns on extra output during the course of a fit.

DEBUG    = {0,1}
 - 0 for normal mode, 1 for debug mode.
 
[/Devel]
