# Configuration file for n3fit

############################################################
description: Basic runcard

############################################################
# frac: training fraction
# ewk: apply ewk k-factors
# sys: systematics treatment (see systypes)
dataset_inputs:
# Proton Datasets
- { dataset: NMCPD_dw, frac: 0.5 }
- { dataset: SLACP_dwsh, frac: 0.6 }
# Nuclear Datasets
- { dataset: NMC_PB_C, frac: 0.5 }
- { dataset: NMC_BE_C, frac: 0.6 }
# - { dataset: ATLASZPT8TEVMDIST, frac: 0.75, sys: 10, cfac: [QCD] }

############################################################
datacuts:
  t0pdfset     : NNPDF40_nnlo_as_01180 # PDF set to generate t0 covmat
  q2min        : 3.49                  # Q2 minimum
  w2min        : 12.5                  # W2 minimum

############################################################
theory:
  theoryid: 200       # database id

parameters: # This defines the parameter dictionary that is passed to the Model Trainer
  nodes_per_layer: [15, 10, 8]
  activation_per_layer: ['sigmoid', 'sigmoid', 'linear']
  initializer: 'glorot_normal'
  optimizer:
    optimizer_name: 'RMSprop'
    learning_rate: 0.01
    clipnorm: 1.0
  epochs: 900
  positivity:
    multiplier: 1.05      # When any of the multiplier and/or the initial is not set
    initial:              # the maxlambda will be used instead to compute these values per dataset
    threshold: 1e-5
  stopping_patience: 0.30 # percentage of the number of epochs
  layer_type: 'dense'
  dropout: 0.0
  threshold_chi2: 5.0

############################################################
trvlseed: 1
nnseed: 2
mcseed: 3
genrep: True     # true = generate MC replicas, false = use real data

fitting:
  # NN23(QED) = sng=0,g=1,v=2,t3=3,ds=4,sp=5,sm=6,(pht=7)
  # EVOL(QED) = sng=0,g=1,v=2,v3=3,v8=4,t3=5,t8=6,(pht=7)
  # EVOLS(QED)= sng=0,g=1,v=2,v8=4,t3=4,t8=5,ds=6,(pht=7)
  # FLVR(QED) = g=0, u=1, ubar=2, d=3, dbar=4, s=5, sbar=6, (pht=7)
  fitbasis: EVOL # EVOL (7), EVOLQED (8), etc.
  # remeber to change the name of PDF accordingly with fitbasis
  basis:
    # Trainable: Make eff. exp. part of the free parameters
  - {fl: sng, trainable: false, smallx: [1.094, 1.118],   largex: [1.46, 3.003]}
  - {fl: g,   trainable: false, smallx: [0.8189, 1.044],  largex: [2.791, 5.697]}
  - {fl: v,   trainable: false, smallx: [0.457, 0.7326],  largex: [1.56, 3.431]}
  - {fl: v3,  trainable: false, smallx: [0.1462, 0.4061], largex: [1.745, 3.452]}
  - {fl: v8,  trainable: false, smallx: [0.5401, 0.7665], largex: [1.539, 3.393]}
  - {fl: t3,  trainable: false, smallx: [-0.4401, 0.9163],largex: [1.773, 3.333]}
  - {fl: t8,  trainable: false, smallx: [0.5852, 0.8537], largex: [1.533, 3.436]}
  - {fl: t15, trainable: false, smallx: [1.082, 1.142],   largex: [1.461, 3.1]}

############################################################
positivity:
  posdatasets:
    - { dataset: POSF2U, maxlambda: 1e6 }  # Positivity Lagrange Multiplier
    - { dataset: POSFLL, maxlambda: 1e4 }

############################################################
integrability:
  integdatasets:
    - {dataset: INTEGXT3,   maxlambda: 1e2}

############################################################
debug: True
maxcores: 16
